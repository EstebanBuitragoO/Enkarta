// <auto-generated />
using System;
using Enkarta.Models.Conex;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Enkarta.Migrations
{
    [DbContext(typeof(DbConex))]
    [Migration("20251028012232_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Enkarta.Models.ModelArticulo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<string>("Contenido")
                        .HasColumnType("longtext");

                    b.Property<bool>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<DateTime?>("FechaActualizado")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FechaCreado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime?>("FechaDesactivado")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FechaPublicacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("PalabrasClaves")
                        .HasColumnType("longtext");

                    b.Property<string>("Resumen")
                        .HasColumnType("longtext");

                    b.Property<string>("Titulo")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Articulos", (string)null);
                });

            modelBuilder.Entity("Enkarta.Models.ModelArticuloAutor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ArticuloId")
                        .HasColumnType("int");

                    b.Property<int>("AutorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArticuloId");

                    b.HasIndex("AutorId");

                    b.ToTable("ArticuloAutores", (string)null);
                });

            modelBuilder.Entity("Enkarta.Models.ModelArticuloEtiqueta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ArticuloId")
                        .HasColumnType("int");

                    b.Property<int>("EtiquetaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArticuloId");

                    b.HasIndex("EtiquetaId");

                    b.ToTable("ArticuloEtiquetas", (string)null);
                });

            modelBuilder.Entity("Enkarta.Models.ModelArticuloFuente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ArticuloId")
                        .HasColumnType("int");

                    b.Property<int>("FuenteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArticuloId");

                    b.HasIndex("FuenteId");

                    b.ToTable("ArticuloFuentes", (string)null);
                });

            modelBuilder.Entity("Enkarta.Models.ModelArticuloMedio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ArticuloId")
                        .HasColumnType("int");

                    b.Property<int>("MedioId")
                        .HasColumnType("int");

                    b.Property<int?>("Orden")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArticuloId");

                    b.HasIndex("MedioId");

                    b.ToTable("ArticuloMedios", (string)null);
                });

            modelBuilder.Entity("Enkarta.Models.ModelAutor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellidos")
                        .HasColumnType("longtext");

                    b.Property<string>("Biografia")
                        .HasColumnType("longtext");

                    b.Property<bool>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<DateTime?>("FechaActualizado")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FechaCreado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime?>("FechaDesactivado")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nombres")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Autores", (string)null);
                });

            modelBuilder.Entity("Enkarta.Models.ModelCategoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("longtext");

                    b.Property<bool>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<DateTime?>("FechaActualizado")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FechaCreado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime?>("FechaDesactivado")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Categorias", (string)null);
                });

            modelBuilder.Entity("Enkarta.Models.ModelEtiqueta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<DateTime?>("FechaActualizado")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FechaCreado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime?>("FechaDesactivado")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Etiquetas", (string)null);
                });

            modelBuilder.Entity("Enkarta.Models.ModelFuente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<DateTime?>("FechaActualizado")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FechaCreado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime?>("FechaDesactivado")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Notas")
                        .HasColumnType("longtext");

                    b.Property<string>("Tipo")
                        .HasColumnType("longtext");

                    b.Property<string>("Titulo")
                        .HasColumnType("longtext");

                    b.Property<string>("Url")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Fuentes", (string)null);
                });

            modelBuilder.Entity("Enkarta.Models.ModelMedio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("longtext");

                    b.Property<bool>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<DateTime?>("FechaActualizado")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FechaCreado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime?>("FechaDesactivado")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Ruta")
                        .HasColumnType("longtext");

                    b.Property<string>("Tipo")
                        .HasColumnType("longtext");

                    b.Property<string>("Titulo")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Medios", (string)null);
                });

            modelBuilder.Entity("Enkarta.Models.ModelArticulo", b =>
                {
                    b.HasOne("Enkarta.Models.ModelCategoria", "Categoria")
                        .WithMany("Articulos")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("Enkarta.Models.ModelArticuloAutor", b =>
                {
                    b.HasOne("Enkarta.Models.ModelArticulo", "Articulo")
                        .WithMany("ArticuloAutores")
                        .HasForeignKey("ArticuloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Enkarta.Models.ModelAutor", "Autor")
                        .WithMany("ArticuloAutores")
                        .HasForeignKey("AutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Articulo");

                    b.Navigation("Autor");
                });

            modelBuilder.Entity("Enkarta.Models.ModelArticuloEtiqueta", b =>
                {
                    b.HasOne("Enkarta.Models.ModelArticulo", "Articulo")
                        .WithMany("ArticuloEtiquetas")
                        .HasForeignKey("ArticuloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Enkarta.Models.ModelEtiqueta", "Etiqueta")
                        .WithMany("ArticuloEtiquetas")
                        .HasForeignKey("EtiquetaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Articulo");

                    b.Navigation("Etiqueta");
                });

            modelBuilder.Entity("Enkarta.Models.ModelArticuloFuente", b =>
                {
                    b.HasOne("Enkarta.Models.ModelArticulo", "Articulo")
                        .WithMany("ArticuloFuentes")
                        .HasForeignKey("ArticuloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Enkarta.Models.ModelFuente", "Fuente")
                        .WithMany("ArticuloFuentes")
                        .HasForeignKey("FuenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Articulo");

                    b.Navigation("Fuente");
                });

            modelBuilder.Entity("Enkarta.Models.ModelArticuloMedio", b =>
                {
                    b.HasOne("Enkarta.Models.ModelArticulo", "Articulo")
                        .WithMany("ArticuloMedios")
                        .HasForeignKey("ArticuloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Enkarta.Models.ModelMedio", "Medio")
                        .WithMany("ArticuloMedios")
                        .HasForeignKey("MedioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Articulo");

                    b.Navigation("Medio");
                });

            modelBuilder.Entity("Enkarta.Models.ModelArticulo", b =>
                {
                    b.Navigation("ArticuloAutores");

                    b.Navigation("ArticuloEtiquetas");

                    b.Navigation("ArticuloFuentes");

                    b.Navigation("ArticuloMedios");
                });

            modelBuilder.Entity("Enkarta.Models.ModelAutor", b =>
                {
                    b.Navigation("ArticuloAutores");
                });

            modelBuilder.Entity("Enkarta.Models.ModelCategoria", b =>
                {
                    b.Navigation("Articulos");
                });

            modelBuilder.Entity("Enkarta.Models.ModelEtiqueta", b =>
                {
                    b.Navigation("ArticuloEtiquetas");
                });

            modelBuilder.Entity("Enkarta.Models.ModelFuente", b =>
                {
                    b.Navigation("ArticuloFuentes");
                });

            modelBuilder.Entity("Enkarta.Models.ModelMedio", b =>
                {
                    b.Navigation("ArticuloMedios");
                });
#pragma warning restore 612, 618
        }
    }
}
